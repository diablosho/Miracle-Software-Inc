<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0043)http://www.adacore.com/adaanswers/about/ada -->
<!DOCTYPE html PUBLIC "" ""><!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]--><!--[if IE 7 ]>    <html lang="en" class="no-js ie7"> <![endif]--><!--[if IE 8 ]>    <html lang="en" class="no-js ie8"> <![endif]--><!--[if IE 9 ]>    <html lang="en" class="no-js ie9"> <![endif]--><!--[if (gt IE 9)|!(IE)]><!--><HTML 
class="no-js" lang="en"><!--<![endif]--><HEAD><META content="IE=10.000" 
http-equiv="X-UA-Compatible">
	 
<META charset="UTF-8"> 
<META http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"> 
<META name="viewport" content="width=1040"> 
<META name="google-site-verification" content="UHFDO1RJWp9TACBm--F_37YUxuBeCYHrmX3VGbkZs8M">
	 <TITLE>The Ada Programming Language | About Ada | Ada Answers | 
AdaCore</TITLE>		 <LINK title="All AdaCore Updates" href="http://www.adacore.com/rss/all" 
rel="alternate" type="application/rss+xml"> <LINK href="/favicon.ico" rel="shortcut icon"> 
<LINK href="/apple-touch-icon.png" rel="apple-touch-icon"> <LINK href="www.AdaCore.com%20-%20The%20Ada%20Programming%20Language_files/style.css" 
rel="stylesheet"> 
<SCRIPT src="www.AdaCore.com%20-%20The%20Ada%20Programming%20Language_files/modernizr-1.7.min.js"></SCRIPT>
 
<SCRIPT src="www.AdaCore.com%20-%20The%20Ada%20Programming%20Language_files/elz2lrf.js" type="text/javascript"></SCRIPT>
 
<SCRIPT type="text/javascript">try{Typekit.load();}catch(e){}</SCRIPT>
		<LINK href="www.AdaCore.com%20-%20The%20Ada%20Programming%20Language_files/adacore_com.css" 
rel="stylesheet" type="text/css" media="screen, projection"> 
<META name="GENERATOR" content="MSHTML 10.00.9200.16686"></HEAD> 
<BODY><!-- template: structure/primary-header
	****************************** -->
	 <HEADER id="primary">
<DIV class="site_width"><HGROUP>
<H1><A class="ir" 
href="http://www.adacore.com/home">AdaCore</A></H1></HGROUP><NAV role="navigation">
<DIV class="utility_links">
<DIV class="search">
<FORM action="/search" method="get"><INPUT name="q" id="q" type="text" 
placeholder="Search" value="">							 <SPAN class="search_btn"><SPAN class="icon ir"></SPAN><INPUT class="submit" type="submit">
							 </SPAN>						 </FORM></DIV>
<DIV class="gnattracker open"><A class="utility toggle" href="http://www.adacore.com/login">GNAT 
Tracker Access<SPAN class="icon toggle arrows"></SPAN></A>
<DIV class="login_field">
<FORM class="clearfix" action="https://www2.adacore.com/gnattracker/" method="post">
<FIELDSET><LABEL for="email">email</LABEL>									 <INPUT name="email" class="text" 
id="email" type="text"><BR><LABEL for="password">password</LABEL>
									 <INPUT name="password" class="text" id="password" type="password">
								 <!-- no redirect -->							 </FIELDSET>
<DIV class="help"><A class="camo" 
href="http://www.adacore.com/login/forgot-pwd">Forgot your password?</A><BR><A 
class="camo" href="http://www.adacore.com/frontline-support/gnattracker">Learn 
about GNAT Tracker</A>							 </DIV><INPUT type="submit" value="login">
							 </FORM></DIV></DIV><A class="utility" href="http://www.adacore.com/company/contact">Contact 
Us</A><A class="utility" href="http://www.adacore.com/company">Company</A></DIV>
<UL>
  <LI><A href="http://www.adacore.com/products">Products</A></LI>
  <LI><A href="http://www.adacore.com/knowledge">Developers</A></LI>
  <LI><A href="http://www.adacore.com/training">Training</A></LI>
  <LI><A href="http://www.adacore.com/customers">Customers</A></LI>
  <LI class="active"><A href="http://www.adacore.com/adaanswers">Ada 
  Answers</A></LI>
  <LI><A href="http://www.adacore.com/academia">Academia</A></LI>
  <LI><A 
href="http://www.adacore.com/support">Support</A></LI></UL></NAV></DIV></HEADER>
<DIV class="navigation_sub">
<DIV class="navigation_sub_inner">
<DIV class="site_width clearfix"><NAV class="breadcrumbs"><A href="http://www.adacore.com/">Home</A> 
/ <A href="http://www.adacore.com/adaanswers/">Ada Answers</A> / <A href="http://www.adacore.com/adaanswers/about/">About 
Ada</A> / <SPAN class="last">The Ada Programming Language</SPAN>
			 </NAV></DIV></DIV></DIV>
<DIV id="main" role="main">
<DIV class="site_width">
<DIV class="navigation_sub_alt">
<H1 class="sub fourth"><A class="camo" 
href="http://www.adacore.com/adaanswers">Ada Answers</A></H1><NAV class="sub three_fourth">
<UL>
  <LI><A class="camo" href="http://www.adacore.com/adaanswers">Overview</A></LI>
  <LI class="active"><A class="camo" href="http://www.adacore.com/adaanswers/about">About 
  Ada</A></LI>
  <LI><A class="camo" href="http://www.adacore.com/adaanswers/benefits-and-features">Benefits 
  &amp; Features</A></LI>
  <LI><A class="camo" href="http://www.adacore.com/adaanswers/gems">Ada 
  Gems</A></LI>
  <LI><A class="camo" href="http://www.adacore.com/adaanswers/resources">Ada 
  Resources</A></LI>
  <LI><A class="camo" href="http://www.adacore.com/adaanswers/lectures">Ada 
  Lecture Series</A></LI>
  <LI><A class="camo" 
  href="http://www.adacore.com/adaanswers/videos">Videos</A></LI></UL></NAV></DIV>
<DIV class="whole box shadow"><ARTICLE class="elpad content"><HEADER class="page_intro_alt">
<H1>				The Ada Programming Language</H1></HEADER>
<P>			Ada is a modern programming language designed for large, long-lived 
applications – and embedded systems in particular – where reliability and 
efficiency are essential. It was originally developed in the early 1980s (this 
version is generally known as Ada 83) by a team led by Dr. Jean Ichbiah at 
CII-Honeywell-Bull in France. The language was revised and enhanced in an upward 
compatible fashion in the early 1990s, under the leadership of Mr. Tucker Taft 
from Intermetrics in the U.S. The resulting language, Ada 95, was the first 
internationally standardized (ISO) Object-Oriented Language. Under the auspices 
of ISO, a further (minor) revision was completed as an amendment to the 
standard; this version of the language is known as Ada 2005. Work is currently 
in progress on some additional features (including support for program 
anotations) and is expected to be completed in 2012.</P>
<P>			The name “Ada” is not an acronym; it was chosen in honor of Augusta Ada 
Lovelace (1815-1852), a mathematician who is sometimes regarded as the world’s 
first programmer because of her work with Charles Babbage. She was also the 
daughter of the poet Lord Byron.</P>
<P>			Ada is seeing significant usage worldwide in high-integrity / 
safety-critical / high-security domains including commercial and military 
aircraft avionics, air traffic control, railroad systems, and medical devices. 
With its embodiment of modern software engineering principles Ada is an 
excellent teaching language for both introductory and advanced computer science 
courses, and it has been the subject of significant university research 
especially in the area of real-time technologies.</P>
<P>			AdaCore has a long history and close connection with the Ada programming 
language. Company members worked on the original Ada 83 design and review, 
played key roles in the Ada 95 project and Ada 2005 effort, and continue to be 
deeply involved with the Ada 2012 revision process. The initial GNAT compiler 
was essential to the growth of Ada 95; it was delivered at the time of the 
language’s standardization, thus guaranteeing that users would have a quality 
implementation for transitioning to Ada 95 from Ada 83 or other languages.</P>
<H1>			Language Overview</H1>
<P>			Ada is multi-faceted. From one perspective it is a classical stack-based 
general-purpose language, not tied to any specific development methodology. It 
has a simple syntax, structured control statements, flexible data composition 
facilities, strong type checking, traditional features for code modularization 
(“subprograms”), and a mechanism for detecting and responding to exceptional 
run-time conditions (“exception handling”).</P>
<P><STRONG><EM>But it also includes much more:</EM></STRONG></P>
<H2>			Scalar ranges</H2>
<P>Unlike languages based on C syntax (such as C++, Java, and C#), Ada allows 
the programmer to simply and explicitly specify the range of values that are 
permitted for variables of scalar types (integer, floating-point, fixed-point, 
or enumeration types). The attempted assignment of an out-of-range value causes 
a run-time error. The ability to specify range contraints makes programmer 
intent explicit and makes it easier to detect a major source of coding and user 
input errors.</P>
<H2>			Programming in the large</H2>
<P>			The original Ada 83 design introduced the package construct, a feature 
that supports encapsulation (“information hiding”) and modularization, and that 
allows the developer to control the namespace that is accessible within a given 
compilation unit. Ada 95 introduced the concept of “child units,” adding 
considerably flexibility and easing the design of very large systems. Ada 2005 
extended the language’s modularization facilities by allowing mutual references 
between package specifications, thus making it easier to interface with 
languages such as Java.</P>
<H2>			Generic templates</H2>
<P>			A key to reusable components is a mechanism for parameterizing modules 
with respect to data types and other program entities, for example a stack 
package for an arbitrary element type. Ada meets this requirement through a 
facility known as “generics”; since the parameterization is done at compile 
time, run-time performance is not penalized.</P>
<H2>			Object-Oriented Programming (OOP)</H2>
<P>			Ada 83 was object-based, allowing the partitioning of a system into 
modules corresponding to abstract data types or abstract objects. Full OOP 
support was not provided since, first, it seemed not to be required in the 
real-time domain that was Ada’s primary target, and, second, the apparent need 
for automatic garbage collection in an OO language would have interfered with 
predictable and efficient performance.</P>
<P>			However, large real-time systems often have components such as GUIs that 
do not have real-time constraints and that could be most effectively developed 
using OOP features. In part for this reason, Ada 95 supplies comprehensive 
support for OOP, through its “tagged type” facility: classes, polymorphism, 
inheritance, and dynamic binding. Ada 95 does not require automatic garbage 
collection but rather supplies definitional features allowing the developer to 
supply type-specific storage reclamation operations (“finalization”). Ada 2005 
provided additional OOP features including Java-like interfaces and traditional 
operation invocation notation.</P>
<P>			Ada is methologically neutral and does not impose a “distributed overhead” 
for OOP. If an application does not need OOP, then the OOP features do not have 
to be used, and there is no run-time penalty.</P>
<H2>			Concurrent programming</H2>
<P>			Ada supplies a structured, high-level facility for concurrency. The unit 
of concurrency is a program entity known as a “task.” Tasks can communicate 
implicitly via shared data or explicitly via a synchronous control mechanism 
known as the rendezvous. A shared data item can be defined abstractly as a 
“protected object” (a feature introduced in Ada 95), with operations executed 
under mutual exclusion when invoked from multiple tasks. Asynchronous task 
interactions are also supported, specifically timeouts and task termination. 
Such asynchronous behavior is deferred during certain operations, to prevent the 
possibility of leaving shared data in an inconsistent state. Mechanisms designed 
to help take advantage of multi-core architectures are being introduced in Ada 
2012.</P>
<H2>			Systems programming</H2>
<P>			Both in the “core” language and the Systems Programming Annex, Ada 
supplies the necessary features to allow the programmer to get close to the 
hardware. For example, you can specify the bit layout for fields in a record, 
define the alignment and size, place data at specific machine addresses, and 
express specialized or time-critical code sequences in assembly language. You 
can also write interrupt handlers in Ada, using the protected type facility.</P>
<H2>			Real-time programming</H2>
<P>			Ada’s tasking features allow you to express common real-time idioms 
(periodic tasks, event-driven tasks), and the Real-Time Annex provides several 
facilities that allow you to avoid unbounded priority inversions. A protected 
object locking policy is defined that uses priority ceilings; this has an 
especially efficient implementation in Ada (mutexes are not required) since 
protected operations are not allowed to block. Ada 95 defined a task dispatching 
policy that basically requires tasks to run until blocked or preempted, and Ada 
2005 introduced several others including Earliest Deadline First.</P>
<H2>			High-integrity systems</H2>
<P>			With its emphasis on sound software engineering principles Ada supports 
the development of high-integrity applications, including those that need to be 
certified against safety standards such as DO-178B and security standards such 
as the Common Criteria. For example, strong typing means that data intended for 
one purpose will not be accessed via inappropriate operations; errors such as 
treating pointers as integers (or vice versa) are prevented. And Ada’s array 
bounds checking prevents buffer overrun vulnerabilities that are common in C and 
C++.</P>
<P>			However, the full language is inappropriate in a safety-critical 
application, since the generality and flexibility may interfere with 
traceability / certification requirements. Ada addresses this issue by supplying 
a compiler directive, pragma Restrictions, that allows you to constrain the 
language features to a well-defined subset (for example, excluding dynamic OOP 
facilities).</P>
<P>			The evolution of Ada has seen the continued increase in support for 
safety-critical and high-security applications. Ada 2005 standardized the 
Ravenscar Profile, a collection of concurrency features that are powerful enough 
for real-time programming but simple enough to make certification practical. Ada 
2012 is introducing annotation facilities for adding pre-conditions, 
post-conditions, and invariants to programs. These can serve both for run-time 
checking and as input to static analysis tools.</P>
<P>			&nbsp;</P>
<H1>			Ada Benefits Summary</H1>
<UL>
  <LI>				Helps you design safe and reliable code</LI>
  <LI>				Reduces development costs</LI>
  <LI>				Supports new and changing technologies</LI>
  <LI>				Facilitates development of complex programs</LI>
  <LI>				Helps make code readable and portable</LI>
  <LI>				Reduces certification costs for safety-critical software</LI></UL>
<H1>			Ada Features Summary</H1>
<UL>
  <LI>				Object orientated programming</LI>
  <LI>				Strong typing</LI>
  <LI>				Abstractions to fit program domain</LI>
  <LI>				Generic programming/templates</LI>
  <LI>				Exception handling</LI>
  <LI>				Facilities for modular organization of code</LI>
  <LI>				Standard libraries for I/O, string handling, numeric computing, 
  containers</LI>
  <LI>				Systems programming</LI>
  <LI>				Concurrent programming</LI>
  <LI>				Real-time programming</LI>
  <LI>				Distributed systems programming</LI>
  <LI>				Numeric processing</LI>
  <LI>				Interfaces to other languages (C, COBOL, Fortran)</LI></UL>
<P>			In brief, Ada is an internationally standardized language combining 
object-oriented programming features, well-engineered concurrency facilities, 
real-time support, and built-in reliability. An appropriate tool for addressing 
the real issues facing software developers today, Ada is used throughout a 
number of major industries to design software that protects businesses and 
lives.</P></ARTICLE></DIV>
<P>	&nbsp;</P>
<DIV class="whole spadb"><SPAN class="st_twitter"></SPAN> <SPAN class="st_linkedin"></SPAN> 
<SPAN class="st_reddit"></SPAN> <SPAN class="st_email"></SPAN> <SPAN class="st_sharethis" 
displaytext="ShareThis"></SPAN> 
<SCRIPT type="text/javascript">var switchTo5x=true;</SCRIPT>

<SCRIPT src="www.AdaCore.com%20-%20The%20Ada%20Programming%20Language_files/buttons.js" type="text/javascript"></SCRIPT>

<SCRIPT type="text/javascript">stLight.options({publisher:'02f50586-cfd4-4158-96a6-77dbf59023a2'});</SCRIPT>
 </DIV></DIV><!-- End .site_width -->	 </DIV><!-- End .main -->	 <FOOTER id="site_footer">
<DIV class="site_width"><NAV class="supplemental">
<DIV class="three_fourth"><A class="home camo" href="http://www.adacore.com/home"><SPAN 
class="icon ir"></SPAN>Home</A><A class="contact camo" href="http://www.adacore.com/company/contact"><SPAN 
class="icon ir"></SPAN>Contact</A><A class="pricing camo" href="http://www.adacore.com/pricing"><SPAN 
class="icon ir"></SPAN>Pricing</A><A class="news camo" href="http://www.adacore.com/press"><SPAN 
class="icon ir"></SPAN>News</A><A class="partners camo" href="http://www.adacore.com/company/partners"><SPAN 
class="icon ir"></SPAN>Partners</A><A class="mailing camo" href="http://www.adacore.com/newsletter"><SPAN 
class="icon ir"></SPAN>Mailing List</A><A class="site_map camo" href="http://www.adacore.com/sitemap"><SPAN 
class="icon ir"></SPAN>Site Map</A></DIV>
<DIV class="fourth"><A class="rss camo" href="http://www.adacore.com/rss"><SPAN 
class="icon ir"></SPAN>RSS</A><A class="twitter camo" href="http://twitter.com/AdaCoreCompany"><SPAN 
class="icon ir"></SPAN>Twitter</A></DIV></NAV>
<DIV class="legal">
<P><SPAN class="adacore_logo ir"></SPAN>Copyright © 2011 AdaCore. All Rights 
Reserved.</P></DIV></DIV></FOOTER><!-- Google Analytics snippet --> 
<SCRIPT>
	(function(d,t){var g=d.createElement(t),s=d.getElementsByTagName(t)[0];g.async=1;
	g.src=('https:'==location.protocol?'//ssl':'//www')+'.google-analytics.com/ga.js';
	s.parentNode.insertBefore(g,s)}(document,'script'));
</SCRIPT>
	 <LINK title="All AdaCore Updates" href="http://www.adacore.com/rss/all" rel="alternate" 
type="application/rss+xml"> <LINK href="/favicon.ico" rel="shortcut icon"> <LINK 
href="/apple-touch-icon.png" rel="apple-touch-icon"> <LINK href="www.AdaCore.com%20-%20The%20Ada%20Programming%20Language_files/style.css" 
rel="stylesheet"> 
<SCRIPT src="www.AdaCore.com%20-%20The%20Ada%20Programming%20Language_files/modernizr-1.7.min.js"></SCRIPT>
 
<SCRIPT src="www.AdaCore.com%20-%20The%20Ada%20Programming%20Language_files/elz2lrf.js" type="text/javascript"></SCRIPT>
 
<SCRIPT type="text/javascript">try{Typekit.load();}catch(e){}</SCRIPT>
		 
<SCRIPT src="www.AdaCore.com%20-%20The%20Ada%20Programming%20Language_files/jquery.min.js"></SCRIPT>
	 
<SCRIPT>!window.jQuery && document.write(unescape('%3Cscript src="/js/libs/jquery-1.7.1.min.js"%3E%3C/script%3E'))</SCRIPT>
	 
<SCRIPT src="www.AdaCore.com%20-%20The%20Ada%20Programming%20Language_files/jquery.orbit-1.2.3.js" type="text/javascript"></SCRIPT>
		 
<SCRIPT src="www.AdaCore.com%20-%20The%20Ada%20Programming%20Language_files/plugins.js"></SCRIPT>
	 
<SCRIPT src="www.AdaCore.com%20-%20The%20Ada%20Programming%20Language_files/script.js"></SCRIPT>
	 <!--[if lt IE 7 ]>
	<script src="/js/libs/dd_belatedpng.js"></script>
	<script> DD_belatedPNG.fix('img, .png_bg');</script>
	<![endif]-->
	 
<SCRIPT type="text/javascript">var _gaq = [['_setAccount', 'UA-117428-2'],['_trackPageview']];</SCRIPT>
 </BODY></HTML>
